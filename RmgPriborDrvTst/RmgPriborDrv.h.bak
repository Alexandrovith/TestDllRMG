// The following ifdef block is the standard way of creating macros which make exporting 
// from a DLL simpler. All files within this DLL are compiled with the RMGPRIBORDRV_EXPORTS
// symbol defined on the command line. This symbol should not be defined on any project
// that uses this DLL. This way any other project whose source files include this file see 
// RMGPRIBORDRV_API functions as being imported from a DLL, whereas this DLL sees symbols
// defined with this macro as being exported.
#pragma once

#include <string>
#include <Windows.h>

#ifdef RMGPRIBORDRV_EXPORTS
#define RMGPRIBORDRV_API __declspec(dllexport)
#else
#define RMGPRIBORDRV_API __declspec(dllimport)
#endif

#define VERSION_MAJOR	1
#define VERSION_MINOR	0
#define VERSION_REVISION "$Revision: 594 $" // updated

//HANDLE hDll;

RMGPRIBORDRV_API void FileLogMessage(const char* message);

RMGPRIBORDRV_API void FilesLogMessage(std::string fname, const char* message);
RMGPRIBORDRV_API void FileLogCharMessage(std::string fname, const char* message, unsigned int count);

EXTERN_C RMGPRIBORDRV_API void Init();

EXTERN_C RMGPRIBORDRV_API void InitConfig(char * jsonConfig);

EXTERN_C RMGPRIBORDRV_API int Subscribe(int tagId, char * address);

EXTERN_C RMGPRIBORDRV_API int WriteValue(char * address, char* value, int size);
EXTERN_C RMGPRIBORDRV_API int GetValue(int tagId, unsigned char*);

EXTERN_C RMGPRIBORDRV_API int * GetNewArchiveData(char * address);

EXTERN_C RMGPRIBORDRV_API void Disconnect();

EXTERN_C RMGPRIBORDRV_API char* GetName();

EXTERN_C RMGPRIBORDRV_API char* GetVer();

//char* GetTimeNow ();
//std::string CharArrToStrAsInt (char *caBuf, int iSize, int Radix = 16);
//UCHAR* CharArrToCharAsInt (void *caBuf, int iSize, int Radix = 16);
